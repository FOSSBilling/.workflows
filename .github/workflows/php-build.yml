name: PHP Build and Archive

on: 
  workflow_call:
    inputs:
      cache_deps:
        description: 'Whether to cache composer dependencies.'
        default: true
        required: false
        type: boolean
      composer_args:
        description: 'The arguments to pass to composer when installing dependencies.'
        default: ''
        required: false
        type: string
      php_versions:
        description: 'The PHP versions to create builds for (as JSON string array).'
        default: '["latest"]'
        required: false
        type: string
      upload_artifact:
        description: 'Whether to upload the build archive(s) as artifact(s).'
        default: true
        required: false
        type: boolean
      upload_artifact_prefix:
        description: > 
         'The artifact name prefix to use when uploading artifacts, if enabled (the
         final artifact name(s) will be a concatenation of prefix and PHP version(s)).'
        default: 'build-archive-php'
        required: false
        type: string

jobs:
  build:
    name: 'PHP ${{ matrix.php }}'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php: ${{ fromJSON(inputs.php_versions) }}
    steps:
      - uses: actions/checkout@v4

      - name: 'Validate composer.json and composer.lock'
        uses: php-actions/composer@v6
        with:
          command: validate
          php_version: ${{ matrix.php }}

      - name: 'Cache Composer Dependencies'
        id: composer-cache
        if: ${{ inputs.cache_deps }}
        uses: actions/cache@v3
        with:
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          path: './src/vendor'

      - name: 'Install Composer Dependencies'
        if: ${{ steps.composer-cache.outputs.cache-hit != 'true' }}
        uses: php-actions/composer@v6
        with:
          args: ${{ inputs.composer_args }}
          php_version: ${{ matrix.php }}
  
      - name: 'Create Build Archive'
        run: |
          mkdir /tmp/builds/ && tar -cvf /tmp/builds/build.tar ./

      - name: 'Upload Build Archive'
        if: ${{ inputs.upload_artifact }}
        uses: actions/upload-artifact@v3
        with:
          if-no-files-found: 'error'
          name: '${{ inputs.upload_artifact_prefix }}-${{ matrix.php }}'
          path: '/tmp/builds'
          retention-days: 1